@page
@model CamposRepresentacoes.Pages.Pedidos.CadastrarModel
@{
}

<!DOCTYPE html>
<html>
<head>
    <!-- Importação de estilos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/admin-lte/3.1.0/css/adminlte.min.css">
    <!-- Importação de scripts -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/admin-lte/3.1.0/js/adminlte.min.js"></script>

    <!-- Estilos aqui -->
    <style>
        #carrinhoIcon {
            position: initial;
            top: 20px;
            right: 20px;
            z-index: 999; /* Garante que o ícone fique acima do conteúdo */
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <form method="post" asp-page-handler="SalvarPedido">
            <!-- Seleção de Cliente, Fornecedor, Transportadora e Forma de Pagamento -->
            <div class="card card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="clienteSelect">Selecione o Cliente:</label>
                            <select class="form-control" asp-for="Pedido.IdCliente" id="clienteSelect">
                                <option value="">Selecione...</option>
                                @if (Model.Clientes != null)
                                {
                                    @foreach (var cliente in Model.Clientes)
                                    {
                                        <option value="@cliente.Id">@cliente.RazaoSocial</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="fornecedorSelect">Selecione o Fornecedor:</label>
                            <select class="form-control" asp-for="Pedido.IdFornecedor" id="fornecedorSelect">
                                <option value="">Selecione...</option>
                                @if (Model.Fornecedores != null)
                                {
                                    @foreach (var fornecedor in Model.Fornecedores)
                                    {
                                        <option value="@fornecedor.Id">@fornecedor.RazaoSocial</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="transportadoraSelect">Selecione a Transportadora:</label>
                            <select class="form-control" asp-for="Pedido.IdTransportadora" id="transportadoraSelect">
                                <option value="">Selecione...</option>
                                @if (Model.Transportadoras != null)
                                {
                                    @foreach (var transportadora in Model.Transportadoras)
                                    {
                                        <option value="@transportadora.Id">@transportadora.RazaoSocial</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="formaPagamentoSelect">Forma de Pagamento:</label>
                            <select class="form-control" asp-for="Pedido.FormaPagamento" id="formaPagamentoSelect">
                                <option value="">Selecione...</option>
                                <option value="1 - Cartao de Credito">Cartão de Crédito</option>
                                <option value="2 - Boleto Bancario">Boleto Bancário</option>
                                <option value="3 - 30/60/90">30/60/90</option>
                                <option value="4 - Vini Paga">Vini Paga</option>
                                <!-- Adicione outras opções conforme necessário -->
                            </select>
                        </div>
                    </div>
                </div>
                <!-- Botão para salvar a capa do pedido -->
                <button id="btnSalvarPedido" type="submit" class="btn btn-primary mt-2">Salvar Capa do Pedido</button>
            </div>
        </form>
        <div id="produto-table" style="display: none">
            <table id="tblProdutos" class="table table-bordered">
                <thead>
                    <tr>
                        <th>Codigo</th>
                        <th>Nome</th>
                        <th>Descrição</th>
                        <th>Preço</th>
                        @* <th>Quantidade</th> *@
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
    </div>
</body>
</html>

@section Scripts {
    <!-- Incluir jQuery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>        

        $(document).ready(function () {
            // Função para verificar se todos os campos obrigatórios foram selecionados
            function verificarCamposObrigatorios() {
                var clienteSelecionado = $('#clienteSelect').val();
                var fornecedorSelecionado = $('#fornecedorSelect').val();
                var transportadoraSelecionada = $('#transportadoraSelect').val();
                var formaPagamentoSelecionada = $('#formaPagamentoSelect').val();

                return clienteSelecionado && fornecedorSelecionado && transportadoraSelecionada && formaPagamentoSelecionada;
            }

            $('#btnSalvarPedido').prop('disabled', true);

            // Habilitar/desabilitar botão de salvar pedido com base na seleção dos campos obrigatórios
            $('#clienteSelect, #fornecedorSelect, #transportadoraSelect, #formaPagamentoSelect').change(function () {
                if (verificarCamposObrigatorios()) {
                    $('#btnSalvarPedido').prop('disabled', false);
                } else {
                    $('#btnSalvarPedido').prop('disabled', true);
                }
            });

            // Handler para clique no botão de salvar pedido
            $('#btnSalvarPedido').on('click', function (event) {
                event.preventDefault(); // Evita que o formulário seja enviado diretamente

                if (!verificarCamposObrigatorios()) {
                    alert("Por favor, selecione cliente, fornecedor, transportadora e forma de pagamento antes de salvar o pedido.");
                    return;
                }

                // Se todos os campos obrigatórios estiverem selecionados, então envie o formulário
                $('form').submit();
            });
        });
                
        $(document).ready(function () {
            // Adicione esta parte para lidar com a resposta após o pedido ser salvo
            $('form').submit(function (event) {
                event.preventDefault(); // Impede o envio direto do formulário

                // Serializa os dados do formulário
                var formData = $(this).serialize();

                $.post($(this).attr('action'), formData)
                    .done(function (response) {
                        if (response.success) {
                            // Atualiza a tabela de produtos com os produtos retornados
                            $('#tblProdutos tbody').empty();

                            $.each(response.produtos, function (index, produto) {
                                var linha = '<tr>';
                                linha += '<td>' + produto.codigo + '</td>';
                                linha += '<td>' + produto.nome + '</td>';
                                linha += '<td>' + produto.descricao + '</td>';
                                linha += '<td>' + parseFloat(produto.preco).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }) + '</td>';
                                linha += '</tr>';
                                $('#tblProdutos tbody').append(linha);
                            });

                            $('#produto-table').show();
                        } else {
                            alert("Falha ao salvar o pedido.");
                        }
                    })
                    .fail(function () {
                        alert("Erro de comunicação com o servidor.");
                    });
            });
        });

        // function getProdutos() {
        //     const fornecedorId = $('#fornecedorSelect').val();
        //     const url = `/Pedidos/Cadastrar?handler=ObterProdutosPorFornecedor&IdFornecedor=${fornecedorId}`;

        //     $.get(url, function (data) {
        //         $('#tblProdutos tbody').empty();

        //         $.each(data, function (index, produto) {
        //             var linha = '<tr>';
        //             linha += '<td>' + produto.Nome + '</td>';
        //             linha += '<td>' + produto.Descricao + '</td>';
        //             linha += '<td>' + produto.Preco + '</td>';
        //             linha += '</tr>';
        //             $('#tblProdutos tbody').append(linha);
        //         });
        //         $('#produto-table').show();
        //     });
        // }

        // $('#fornecedorSelect').change(function () {
        //     getProdutos();
        // });
    </script>
}


